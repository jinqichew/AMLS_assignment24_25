import numpy as np
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# load data
data = np.load("breastmnist.npz")
train_images = data['train_images']
train_labels = data['train_labels']
val_images = data['val_images']
val_labels = data['val_labels']
test_images = data['test_images']
test_labels = data['test_labels']

# preprocess
X_train = train_images.reshape(train_images.shape[0], -1) / 255.0
X_val = val_images.reshape(val_images.shape[0], -1) / 255.0
X_test = test_images.reshape(test_images.shape[0], -1) / 255.0

y_train = train_labels.ravel()
y_val = val_labels.ravel()
y_test = test_labels.ravel()

# train knn model
knn = KNeighborsClassifier(n_neighbors=20)
knn.fit(X_train, y_train)

# evaluate validation and test sets
val_pred = knn.predict(X_val)
test_pred = knn.predict(X_test)

# calculate accuracies
val_accuracy = accuracy_score(y_val, val_pred)
test_accuracy = accuracy_score(y_test, test_pred)

print(f"KNN Validation Accuracy: {val_accuracy:.4f}")
print(f"KNN Test Accuracy: {test_accuracy:.4f}")

# combine validation and test sets
X_combined = np.vstack((X_val, X_test))
y_combined = np.concatenate((y_val, y_test))
combined_pred = knn.predict(X_combined)
combined_acc = accuracy_score(y_combined, combined_pred)
print(f"KNN Combined Accuracy: {combined_acc:.4f}")
